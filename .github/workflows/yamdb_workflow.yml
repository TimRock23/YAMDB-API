name: yamdb-api workflow


on: [push]


jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt

      - name: Link with flake8
        run: flake8 . --exclude tests,api/migrations,review/migrations,users/migrations,api_yamdb/settings.py

      - name: Test with pytest
        run: pytest


  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/yamdb_final:latest

  deploy:
    env:
      PROJECT_ROOT: ~/www/yamdb_final
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub

    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: "docker-compose.yaml, nginx/default.conf, static, media"
          target: ${{ env.PROJECT_ROOT}}
          script: |
            cd ${{ env.PROJECT_ROOT }}
            sudo apt-get install docker-ce docker-ce-cli containerd.io
            sudo curl -L "https://github.com/docker/compose/releases/download/1.28.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            sudo docker pull timrock/yamdb_final
            sudo docker stop $(sudo docker ps -a -q)
            sudo docker run --rm -d -p 5000:5000 timrock/api_yamdb

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send_message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
